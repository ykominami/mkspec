/*
 * This file was automatically generated by tecsgen.
 * This file is not intended to be edited.
 */
#ifndef tSerialTaskBody_TECSGEN_H
#define tSerialTaskBody_TECSGEN_H

/*
 * celltype          :  tSerialTaskBody
 * global name       :  tSerialTaskBody
 * multi-domain      :  no
 * idx_is_id(actual) :  no(no)
 * singleton         :  no
 * has_CB            :  yes
 * has_INIB          :  no
 * rom               :  no
 * CB initializer    :  yes
 */

/* global header #_IGH_# */
#include "global_tecsgen.h"

/* signature header #_ISH_# */
#include "sTaskBody_tecsgen.h"
#include "sTaskExceptionBody_tecsgen.h"

#ifndef TOPPERS_MACRO_ONLY

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */
/* cell CB type definition #_CCTPO_# */
typedef struct tag_tSerialTaskBody_CB {
    /* call port #_TCP_# */
    struct tag_sTaskBody_VDES *const*cBodyArray; /* TCP_2 */
    int_t n_cBodyArray;  /* TCP_3 */
    struct tag_sTaskExceptionBody_VDES *const*cTaskExceptionBodyArray; /* TCP_2 */
    int_t n_cTaskExceptionBodyArray;  /* TCP_3 */
    /* call port #_NEP_# */ 
    /* attribute #_AT_# */ 
    char_t*        name;
}  tSerialTaskBody_CB;
/* singleton cell CB prototype declaration #_MCPB_# */
extern tSerialTaskBody_CB  tSerialTaskBody_CB_tab[];

/* celltype IDX type #_CTIX_# */
typedef struct tag_tSerialTaskBody_CB *tSerialTaskBody_IDX;

/* prototype declaration of entry port function #_EPP_# */
/* sTaskBody */
void         tSerialTaskBody_eTaskBody_main(tSerialTaskBody_IDX idx);
#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* TOPPERS_MACRO_ONLY */

#ifndef TOPPERS_CB_TYPE_ONLY

#define tSerialTaskBody_ID_BASE        (1)  /* ID Base  #_NIDB_# */
#define tSerialTaskBody_N_CELL        (1)  /*  number of cells  #_NCEL_# */

/* IDX validation macro #_CVI_# */
#define tSerialTaskBody_VALID_IDX(IDX) (1)

/* call port array size macro #_NCPA_# */
#define N_CP_cBodyArray(p_that)  ((p_that)->n_cBodyArray)
#define NCP_cBodyArray           (N_CP_cBodyArray(p_cellcb))
#define N_CP_cTaskExceptionBodyArray(p_that)  ((p_that)->n_cTaskExceptionBodyArray)
#define NCP_cTaskExceptionBodyArray           (N_CP_cTaskExceptionBodyArray(p_cellcb))
/* optional call port test macro #_TOCP_# */
#define tSerialTaskBody_is_cTaskExceptionBodyArray_joined(p_that,subscript) \
	  (((p_that)->cTaskExceptionBodyArray!=0)\
	  &&((p_that)->cTaskExceptionBodyArray[subscript]!=0))

/* celll CB macro #_GCB_# */
#define tSerialTaskBody_GET_CELLCB(idx) (idx)

/* attr access  #_AAM_# */
#define tSerialTaskBody_ATTR_name( p_that )	((p_that)->name)

#define tSerialTaskBody_GET_name(p_that)	((p_that)->name)



#ifndef TECSFLOW
 /* call port function macro #_CPM_# */
#define tSerialTaskBody_cBodyArray_main( p_that, subscript ) \
	  (p_that)->cBodyArray[subscript]->VMT->main__T( \
	   (p_that)->cBodyArray[subscript] )
#define tSerialTaskBody_cTaskExceptionBodyArray_main( p_that, subscript, pattern ) \
	  (p_that)->cTaskExceptionBodyArray[subscript]->VMT->main__T( \
	   (p_that)->cTaskExceptionBodyArray[subscript], (pattern) )

#else  /* TECSFLOW */
#define tSerialTaskBody_cBodyArray_main( p_that, subscript ) \
	  (p_that)->cBodyArray[subscript].main__T( \
 )
#define tSerialTaskBody_cTaskExceptionBodyArray_main( p_that, subscript, pattern ) \
	  (p_that)->cTaskExceptionBodyArray[subscript].main__T( \
 (pattern) )

#endif /* TECSFLOW */
#endif /* TOPPERS_CB_TYPE_ONLY */

#ifndef TOPPERS_MACRO_ONLY

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/* prototype declaration of entry port function (referenced when VMT useless optimise enabled) #_EPSP_# */

#ifndef TOPPERS_CB_TYPE_ONLY

#endif /* TOPPERS_CB_TYPE_ONLY */

#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* TOPPERS_MACRO_ONLY */

#ifndef TOPPERS_CB_TYPE_ONLY

/* IDX validation macro (abbrev.) #_CVIA_# */
#define VALID_IDX(IDX)  tSerialTaskBody_VALID_IDX(IDX)


/* cell CB macro (abbrev) #_GCBA_# */
#define GET_CELLCB(idx)  tSerialTaskBody_GET_CELLCB(idx)

/* CELLCB type (abbrev) #_CCT_# */
#define CELLCB	tSerialTaskBody_CB

/* celltype IDX type (abbrev) #_CTIXA_# */
#define CELLIDX	tSerialTaskBody_IDX


/* attr access macro (abbrev) #_AAMA_# */
#define ATTR_name            tSerialTaskBody_ATTR_name( p_cellcb )


/* call port function macro (abbrev) #_CPMA_# */
#define cBodyArray_main( subscript ) \
          tSerialTaskBody_cBodyArray_main( p_cellcb, subscript )
#define cTaskExceptionBodyArray_main( subscript, pattern ) \
          tSerialTaskBody_cTaskExceptionBodyArray_main( p_cellcb, subscript, pattern )



/* optional call port test macro (abbrev) #_TOCPA_# */
#define is_cTaskExceptionBodyArray_joined(subscript)\
		tSerialTaskBody_is_cTaskExceptionBodyArray_joined(p_cellcb,subscript)

/* entry port function macro (abbrev) #_EPM_# */
#define eTaskBody_main   tSerialTaskBody_eTaskBody_main

/* iteration code (FOREACH_CELL) #_FEC_# */
#define FOREACH_CELL(i,p_cb)   \
    for( (i) = 0; (i) < tSerialTaskBody_N_CELL; (i)++ ){ \
       (p_cb) = &tSerialTaskBody_CB_tab[i];

#define END_FOREACH_CELL   }

/* CB initialize macro #_CIM_# */
#define INITIALIZE_CB(p_that)	(void)(p_that);
#define SET_CB_INIB_POINTER(i,p_that)\
	/* empty */
#endif /* TOPPERS_CB_TYPE_ONLY */

#ifndef TOPPERS_MACRO_ONLY

#endif /* TOPPERS_MACRO_ONLY */

#endif /* tSerialTaskBody_TECSGENH */
