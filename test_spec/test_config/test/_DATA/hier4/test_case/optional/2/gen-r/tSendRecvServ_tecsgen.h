/*
 * This file was automatically generated by tecsgen.
 * This file is not intended to be edited.
 */
#ifndef tSendRecvServ_TECSGEN_H
#define tSendRecvServ_TECSGEN_H

/*
 * celltype          :  tSendRecvServ
 * global name       :  tSendRecvServ
 * multi-domain      :  no
 * idx_is_id(actual) :  no(no)
 * singleton         :  no
 * has_CB            :  no
 * has_INIB          :  no
 * rom               :  no
 * CB initializer    :  no
 */

/* global header #_IGH_# */
#include "global_tecsgen.h"

/* signature header #_ISH_# */
#include "sSigSendRecv_tecsgen.h"
#include "sAlloc_tecsgen.h"

#ifndef TOPPERS_MACRO_ONLY

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */
/* cell CB type definition #_CCTPO_# */
typedef struct tag_tSendRecvServ_CB {
    /* call port #_TCP_# */
    /* call port #_NEP_# */ 
}  tSendRecvServ_CB;
/* singleton cell CB prototype declaration #_MCPB_# */

/* celltype IDX type #_CTIX_# */
typedef int   tSendRecvServ_IDX;

/* prototype declaration of entry port function #_EPP_# */
/* sSigSendRecv */
ER           tSendRecvServ_eEnt_snd(tSendRecvServ_IDX idx, ST_VAL* st_val);
ER           tSendRecvServ_eEnt_rcv(tSendRecvServ_IDX idx, ST_VAL** st_val);
#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* TOPPERS_MACRO_ONLY */

/* to get the definition of CB type of referenced celltype for optimization #_ICT_# */
#ifndef  TOPPERS_CB_TYPE_ONLY
#define  tSendRecvServ_CB_TYPE_ONLY
#define TOPPERS_CB_TYPE_ONLY
#endif  /* TOPPERS_CB_TYPE_ONLY */
#include "tAlloc_tecsgen.h"
#ifdef  tSendRecvServ_CB_TYPE_ONLY
#undef TOPPERS_CB_TYPE_ONLY
#endif /* tSendRecvServ_CB_TYPE_ONLY */
#ifndef TOPPERS_CB_TYPE_ONLY

#define tSendRecvServ_ID_BASE        (1)  /* ID Base  #_NIDB_# */
#define tSendRecvServ_N_CELL        (2)  /*  number of cells  #_NCEL_# */

/* IDX validation macro #_CVI_# */
#define tSendRecvServ_VALID_IDX(IDX) (1)


/* celll CB macro #_GCB_# */
#define tSendRecvServ_GET_CELLCB(idx) ((void *)0)
#ifndef TECSFLOW
 /* call port function macro #_CPM_# */
#define tSendRecvServ_eEnt_snd_st_val_alloc( p_that, size, p ) \
	  tAlloc_eA_alloc( \
	   &tAlloc_CB_tab[0], (size), (p) )
#define tSendRecvServ_eEnt_snd_st_val_dealloc( p_that, p ) \
	  tAlloc_eA_dealloc( \
	   &tAlloc_CB_tab[0], (p) )
#define tSendRecvServ_eEnt_rcv_st_val_alloc( p_that, size, p ) \
	  tAlloc_eA_alloc( \
	   &tAlloc_CB_tab[0], (size), (p) )
#define tSendRecvServ_eEnt_rcv_st_val_dealloc( p_that, p ) \
	  tAlloc_eA_dealloc( \
	   &tAlloc_CB_tab[0], (p) )

#else  /* TECSFLOW */
#define tSendRecvServ_eEnt_snd_st_val_alloc( p_that, size, p ) \
	  (p_that)->eEnt_snd_st_val.alloc__T( \
 (size), (p) )
#define tSendRecvServ_eEnt_snd_st_val_dealloc( p_that, p ) \
	  (p_that)->eEnt_snd_st_val.dealloc__T( \
 (p) )
#define tSendRecvServ_eEnt_rcv_st_val_alloc( p_that, size, p ) \
	  (p_that)->eEnt_rcv_st_val.alloc__T( \
 (size), (p) )
#define tSendRecvServ_eEnt_rcv_st_val_dealloc( p_that, p ) \
	  (p_that)->eEnt_rcv_st_val.dealloc__T( \
 (p) )

#endif /* TECSFLOW */
#endif /* TOPPERS_CB_TYPE_ONLY */

#ifndef TOPPERS_MACRO_ONLY

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/* prototype declaration of entry port function (referenced when VMT useless optimise enabled) #_EPSP_# */

#ifndef TOPPERS_CB_TYPE_ONLY

#endif /* TOPPERS_CB_TYPE_ONLY */

#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* TOPPERS_MACRO_ONLY */

#ifndef TOPPERS_CB_TYPE_ONLY

/* IDX validation macro (abbrev.) #_CVIA_# */
#define VALID_IDX(IDX)  tSendRecvServ_VALID_IDX(IDX)


/* cell CB macro (abbrev) #_GCBA_# */
#define GET_CELLCB(idx)  tSendRecvServ_GET_CELLCB(idx)

/* CELLCB type (abbrev) #_CCT_# */
#define CELLCB	tSendRecvServ_CB

/* celltype IDX type (abbrev) #_CTIXA_# */
#define CELLIDX	tSendRecvServ_IDX

/* call port function macro (abbrev) #_CPMA_# */
#define eEnt_snd_st_val_alloc( size, p ) \
          ((void)p_cellcb, tSendRecvServ_eEnt_snd_st_val_alloc( p_cellcb, size, p ))
#define eEnt_snd_st_val_dealloc( p ) \
          ((void)p_cellcb, tSendRecvServ_eEnt_snd_st_val_dealloc( p_cellcb, p ))
#define eEnt_rcv_st_val_alloc( size, p ) \
          ((void)p_cellcb, tSendRecvServ_eEnt_rcv_st_val_alloc( p_cellcb, size, p ))
#define eEnt_rcv_st_val_dealloc( p ) \
          ((void)p_cellcb, tSendRecvServ_eEnt_rcv_st_val_dealloc( p_cellcb, p ))




/* entry port function macro (abbrev) #_EPM_# */
#define eEnt_snd         tSendRecvServ_eEnt_snd
#define eEnt_rcv         tSendRecvServ_eEnt_rcv

/* iteration code (FOREACH_CELL) (niether CB, nor NIB exit) #_NFEC_# */
#define FOREACH_CELL(i,p_cb)   \
    for((i)=0;(i)<0;(i)++){

#define END_FOREACH_CELL   }

/* CB initialize macro #_CIM_# */

/* deallocate macro #_DAL_#   */
#define EENT_SND_ST_VAL_DEALLOC(st_val) \
	  eEnt_snd_st_val_dealloc( (st_val) ); 
#define EENT_RCV_ST_VAL_DEALLOC(st_val) \
	  eEnt_rcv_st_val_dealloc( (st_val) ); 

/* deallocate macro #_DAL_#  _RESET */
#define EENT_SND_ST_VAL_DEALLOC_RESET(st_val) \
	  if( (st_val) ){ \
	    eEnt_snd_st_val_dealloc( (st_val) );  \
	  }
#define EENT_RCV_ST_VAL_DEALLOC_RESET(st_val) \
	  if( (st_val) ){ \
	    eEnt_rcv_st_val_dealloc( (st_val) );  \
	  }
#endif /* TOPPERS_CB_TYPE_ONLY */

#ifndef TOPPERS_MACRO_ONLY

#endif /* TOPPERS_MACRO_ONLY */

#endif /* tSendRecvServ_TECSGENH */
