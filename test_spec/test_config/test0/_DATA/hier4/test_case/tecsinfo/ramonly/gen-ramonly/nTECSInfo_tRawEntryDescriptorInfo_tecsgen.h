/*
 * This file was automatically generated by tecsgen.
 * This file is not intended to be edited.
 */
#ifndef nTECSInfo_tRawEntryDescriptorInfo_TECSGEN_H
#define nTECSInfo_tRawEntryDescriptorInfo_TECSGEN_H

/*
 * celltype          :  tRawEntryDescriptorInfo
 * global name       :  nTECSInfo_tRawEntryDescriptorInfo
 * multi-domain      :  no
 * idx_is_id(actual) :  no(no)
 * singleton         :  no
 * has_CB            :  yes
 * has_INIB          :  no
 * rom               :  no
 * CB initializer    :  yes
 */

/* global header #_IGH_# */
#include "global_tecsgen.h"

/* signature header #_ISH_# */
#include "nTECSInfo_sRawEntryDescriptorInfo_tecsgen.h"

#ifndef TOPPERS_MACRO_ONLY

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */
/* cell CB type definition #_CCTPO_# */
typedef struct tag_nTECSInfo_tRawEntryDescriptorInfo_CB {
    /* call port #_NEP_# */ 
    /* attribute #_AT_# */ 
    int_t          size;
    const void**         rawEntryDescriptor;
}  nTECSInfo_tRawEntryDescriptorInfo_CB;
/* singleton cell CB prototype declaration #_MCPB_# */
extern nTECSInfo_tRawEntryDescriptorInfo_CB  nTECSInfo_tRawEntryDescriptorInfo_CB_tab[];

/* celltype IDX type #_CTIX_# */
typedef struct tag_nTECSInfo_tRawEntryDescriptorInfo_CB *nTECSInfo_tRawEntryDescriptorInfo_IDX;

/* prototype declaration of entry port function #_EPP_# */
/* nTECSInfo_sRawEntryDescriptorInfo */
uint16_t     nTECSInfo_tRawEntryDescriptorInfo_eRawEntryDescriptor_getNRawEntryDescriptorInfo(nTECSInfo_tRawEntryDescriptorInfo_IDX idx);
ER           nTECSInfo_tRawEntryDescriptorInfo_eRawEntryDescriptor_getRawDescriptor(nTECSInfo_tRawEntryDescriptorInfo_IDX idx, int_t subsc, void** rawDesc);
#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* TOPPERS_MACRO_ONLY */

#ifndef TOPPERS_CB_TYPE_ONLY

#define nTECSInfo_tRawEntryDescriptorInfo_ID_BASE        (1)  /* ID Base  #_NIDB_# */
#define nTECSInfo_tRawEntryDescriptorInfo_N_CELL        (5)  /*  number of cells  #_NCEL_# */

/* IDX validation macro #_CVI_# */
#define nTECSInfo_tRawEntryDescriptorInfo_VALID_IDX(IDX) (1)


/* celll CB macro #_GCB_# */
#define nTECSInfo_tRawEntryDescriptorInfo_GET_CELLCB(idx) (idx)

/* attr access  #_AAM_# */
#define nTECSInfo_tRawEntryDescriptorInfo_ATTR_size( p_that )	((p_that)->size)
#define nTECSInfo_tRawEntryDescriptorInfo_ATTR_rawEntryDescriptor( p_that )	((p_that)->rawEntryDescriptor)

#define nTECSInfo_tRawEntryDescriptorInfo_GET_size(p_that)	((p_that)->size)
#define nTECSInfo_tRawEntryDescriptorInfo_GET_rawEntryDescriptor(p_that)	((p_that)->rawEntryDescriptor)



#ifndef TECSFLOW
#else  /* TECSFLOW */
#endif /* TECSFLOW */
#endif /* TOPPERS_CB_TYPE_ONLY */

#ifndef TOPPERS_MACRO_ONLY

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/* prototype declaration of entry port function (referenced when VMT useless optimise enabled) #_EPSP_# */
/* eRawEntryDescriptor */
uint16_t       nTECSInfo_tRawEntryDescriptorInfo_eRawEntryDescriptor_getNRawEntryDescriptorInfo_skel( const struct tag_nTECSInfo_sRawEntryDescriptorInfo_VDES *epd);
ER             nTECSInfo_tRawEntryDescriptorInfo_eRawEntryDescriptor_getRawDescriptor_skel( const struct tag_nTECSInfo_sRawEntryDescriptorInfo_VDES *epd, int_t subsc, void** rawDesc);

#ifndef TOPPERS_CB_TYPE_ONLY

#endif /* TOPPERS_CB_TYPE_ONLY */

#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* TOPPERS_MACRO_ONLY */

#ifndef TOPPERS_CB_TYPE_ONLY

/* IDX validation macro (abbrev.) #_CVIA_# */
#define VALID_IDX(IDX)  nTECSInfo_tRawEntryDescriptorInfo_VALID_IDX(IDX)


/* cell CB macro (abbrev) #_GCBA_# */
#define GET_CELLCB(idx)  nTECSInfo_tRawEntryDescriptorInfo_GET_CELLCB(idx)

/* CELLCB type (abbrev) #_CCT_# */
#define CELLCB	nTECSInfo_tRawEntryDescriptorInfo_CB

/* celltype IDX type (abbrev) #_CTIXA_# */
#define CELLIDX	nTECSInfo_tRawEntryDescriptorInfo_IDX

#define tRawEntryDescriptorInfo_IDX  nTECSInfo_tRawEntryDescriptorInfo_IDX

/* attr access macro (abbrev) #_AAMA_# */
#define ATTR_size            nTECSInfo_tRawEntryDescriptorInfo_ATTR_size( p_cellcb )
#define ATTR_rawEntryDescriptor nTECSInfo_tRawEntryDescriptorInfo_ATTR_rawEntryDescriptor( p_cellcb )





/* entry port function macro (abbrev) #_EPM_# */
#define eRawEntryDescriptor_getNRawEntryDescriptorInfo nTECSInfo_tRawEntryDescriptorInfo_eRawEntryDescriptor_getNRawEntryDescriptorInfo
#define eRawEntryDescriptor_getRawDescriptor nTECSInfo_tRawEntryDescriptorInfo_eRawEntryDescriptor_getRawDescriptor

/* iteration code (FOREACH_CELL) #_FEC_# */
#define FOREACH_CELL(i,p_cb)   \
    for( (i) = 0; (i) < nTECSInfo_tRawEntryDescriptorInfo_N_CELL; (i)++ ){ \
       (p_cb) = &nTECSInfo_tRawEntryDescriptorInfo_CB_tab[i];

#define END_FOREACH_CELL   }

/* CB initialize macro #_CIM_# */
#define INITIALIZE_CB(p_that)	(void)(p_that);
#define SET_CB_INIB_POINTER(i,p_that)\
	/* empty */
#endif /* TOPPERS_CB_TYPE_ONLY */

#ifndef TOPPERS_MACRO_ONLY

#endif /* TOPPERS_MACRO_ONLY */

#endif /* nTECSInfo_tRawEntryDescriptorInfo_TECSGENH */
