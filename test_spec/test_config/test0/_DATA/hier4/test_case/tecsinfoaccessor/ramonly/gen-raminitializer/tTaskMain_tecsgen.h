/*
 * This file was automatically generated by tecsgen.
 * This file is not intended to be edited.
 */
#ifndef tTaskMain_TECSGEN_H
#define tTaskMain_TECSGEN_H

/*
 * celltype          :  tTaskMain
 * global name       :  tTaskMain
 * multi-domain      :  no
 * idx_is_id(actual) :  no(no)
 * singleton         :  no
 * has_CB            :  no
 * has_INIB          :  yes
 * rom               :  yes
 * CB initializer    :  yes
 */

/* global header #_IGH_# */
#include "global_tecsgen.h"

/* signature header #_ISH_# */
#include "sTaskBody_tecsgen.h"
#include "nTECSInfo_sAccessor_tecsgen.h"

#ifndef TOPPERS_MACRO_ONLY

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */
/* cell INIB type definition #_CIP_# */
typedef const struct tag_tTaskMain_INIB {
    /* call port #_TCP_# */
    /* call port #_NEP_# */ 
    /* attribute(RO) #_ATO_# */ 
    int16_t        NAME_LEN;
    char_t*        name;
    char_t*        name2;
}  tTaskMain_INIB;

/* CB not exist. CB corresponding to INIB #_DCI_# */
#define tTaskMain_CB_tab           tTaskMain_INIB_tab
#define tTaskMain_CB               tTaskMain_INIB
#define tag_tTaskMain_CB           tag_tTaskMain_INIB

/* singleton cell CB prototype declaration #_MCPB_# */
extern tTaskMain_INIB  tTaskMain_INIB_tab[];

/* celltype IDX type #_CTIX_# */
typedef const struct tag_tTaskMain_INIB *tTaskMain_IDX;

/* prototype declaration of entry port function #_EPP_# */
/* sTaskBody */
void         tTaskMain_eBody_main(tTaskMain_IDX idx);
#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* TOPPERS_MACRO_ONLY */

/* to get the definition of CB type of referenced celltype for optimization #_ICT_# */
#ifndef  TOPPERS_CB_TYPE_ONLY
#define  tTaskMain_CB_TYPE_ONLY
#define TOPPERS_CB_TYPE_ONLY
#endif  /* TOPPERS_CB_TYPE_ONLY */
#include "nTECSInfo_tTECSInfoAccessor_tecsgen.h"
#ifdef  tTaskMain_CB_TYPE_ONLY
#undef TOPPERS_CB_TYPE_ONLY
#endif /* tTaskMain_CB_TYPE_ONLY */
#ifndef TOPPERS_CB_TYPE_ONLY

#define tTaskMain_ID_BASE           (1)  /* ID Base  #_NIDB_# */
#define tTaskMain_N_CELL            (1)  /*  number of cells  #_NCEL_# */

/* IDX validation macro #_CVI_# */
#define tTaskMain_VALID_IDX(IDX) (1)


/* celll CB macro #_GCB_# */
#define tTaskMain_GET_CELLCB(idx) (idx)

/* attr access  #_AAM_# */
#define tTaskMain_ATTR_NAME_LEN( p_that )	((p_that)->NAME_LEN)

#define tTaskMain_GET_NAME_LEN(p_that)	((p_that)->NAME_LEN)


/* var access macro #_VAM_# */
#define tTaskMain_VAR_name(p_that)	((p_that)->name)
#define tTaskMain_VAR_name2(p_that)	((p_that)->name2)

#define tTaskMain_GET_name(p_that)	((p_that)->name)
#define tTaskMain_SET_name(p_that,val)	((p_that)->name=(val))
#define tTaskMain_GET_name2(p_that)	((p_that)->name2)
#define tTaskMain_SET_name2(p_that,val)	((p_that)->name2=(val))

#ifndef TECSFLOW
 /* call port function macro #_CPM_# */
#define tTaskMain_cAccessor_selectNamespaceInfoByName( p_that, namespacePath ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_selectNamespaceInfoByName( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (namespacePath) )
#define tTaskMain_cAccessor_selectCelltypeInfoByName( p_that, celltypePath ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_selectCelltypeInfoByName( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (celltypePath) )
#define tTaskMain_cAccessor_selectSignatureInfoByName( p_that, signaturePath ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_selectSignatureInfoByName( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (signaturePath) )
#define tTaskMain_cAccessor_selectRegionInfoByName( p_that, regionPath ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_selectRegionInfoByName( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (regionPath) )
#define tTaskMain_cAccessor_selectCellInfoByName( p_that, cellPath ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_selectCellInfoByName( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (cellPath) )
#define tTaskMain_cAccessor_getSignatureNameOfCellEntry( p_that, cellEntryPath, signatureGlobalName, max_len ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_getSignatureNameOfCellEntry( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (cellEntryPath), (signatureGlobalName), (max_len) )
#define tTaskMain_cAccessor_getSelectedNamespaceInfo( p_that, name, max_len, num_namespace, num_celltype, num_signature ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_getSelectedNamespaceInfo( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (name), (max_len), (num_namespace), (num_celltype), (num_signature) )
#define tTaskMain_cAccessor_selectCelltypeInfo( p_that, ith ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_selectCelltypeInfo( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (ith) )
#define tTaskMain_cAccessor_selectSignatureInfo( p_that, ith ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_selectSignatureInfo( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (ith) )
#define tTaskMain_cAccessor_selectNamespaceInfo( p_that, ith ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_selectNamespaceInfo( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (ith) )
#define tTaskMain_cAccessor_getSelectedCelltypeInfo( p_that, name, max_len, num_attr, num_var, num_call, num_entry ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_getSelectedCelltypeInfo( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (name), (max_len), (num_attr), (num_var), (num_call), (num_entry) )
#define tTaskMain_cAccessor_selectCallInfo( p_that, ith ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_selectCallInfo( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (ith) )
#define tTaskMain_cAccessor_selectEntryInfo( p_that, ith ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_selectEntryInfo( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (ith) )
#define tTaskMain_cAccessor_selectAttrInfo( p_that, ith ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_selectAttrInfo( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (ith) )
#define tTaskMain_cAccessor_selectVarInfo( p_that, ith ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_selectVarInfo( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (ith) )
#define tTaskMain_cAccessor_getSelectedAttrInfo( p_that, name, max_len ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_getSelectedAttrInfo( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (name), (max_len) )
#define tTaskMain_cAccessor_getSizeIsExprOfAttr( p_that, expr_str, max_len ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_getSizeIsExprOfAttr( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (expr_str), (max_len) )
#define tTaskMain_cAccessor_selectTypeInfoOfAttr( p_that ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_selectTypeInfoOfAttr( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0] )
#define tTaskMain_cAccessor_getSelectedVarInfo( p_that, name, max_len ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_getSelectedVarInfo( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (name), (max_len) )
#define tTaskMain_cAccessor_getSizeIsExprOfVar( p_that, expr_str, max_len ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_getSizeIsExprOfVar( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (expr_str), (max_len) )
#define tTaskMain_cAccessor_selectTypeInfoOfVar( p_that ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_selectTypeInfoOfVar( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0] )
#define tTaskMain_cAccessor_getSelectedCallInfo( p_that, name, max_len, array_size ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_getSelectedCallInfo( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (name), (max_len), (array_size) )
#define tTaskMain_cAccessor_selectSignatureOfCall( p_that ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_selectSignatureOfCall( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0] )
#define tTaskMain_cAccessor_getSelectedCallSpecifierInfo( p_that, b_optional, b_dynamic, b_ref_desc, b_omit ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_getSelectedCallSpecifierInfo( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (b_optional), (b_dynamic), (b_ref_desc), (b_omit) )
#define tTaskMain_cAccessor_getSelectedCallInternalInfo( p_that, b_allocator_port, b_require_port ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_getSelectedCallInternalInfo( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (b_allocator_port), (b_require_port) )
#define tTaskMain_cAccessor_getSelectedCallLocationInfo( p_that, offset, place ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_getSelectedCallLocationInfo( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (offset), (place) )
#define tTaskMain_cAccessor_getSelectedCallOptimizeInfo( p_that, b_VMT_useless, b_skelton_useless, b_cell_unique ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_getSelectedCallOptimizeInfo( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (b_VMT_useless), (b_skelton_useless), (b_cell_unique) )
#define tTaskMain_cAccessor_getSelectedEntryInfo( p_that, name, max_len, array_size ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_getSelectedEntryInfo( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (name), (max_len), (array_size) )
#define tTaskMain_cAccessor_selectSignatureOfEntry( p_that ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_selectSignatureOfEntry( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0] )
#define tTaskMain_cAccessor_getSelectedEntryInlineInfo( p_that, b_inline ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_getSelectedEntryInlineInfo( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (b_inline) )
#define tTaskMain_cAccessor_getSelectedSignatureInfo( p_that, name, max_len, num_function ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_getSelectedSignatureInfo( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (name), (max_len), (num_function) )
#define tTaskMain_cAccessor_selectFunctionInfoByIndex( p_that, ith ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_selectFunctionInfoByIndex( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (ith) )
#define tTaskMain_cAccessor_getSelectedFunctionInfo( p_that, name, max_len, num_args ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_getSelectedFunctionInfo( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (name), (max_len), (num_args) )
#define tTaskMain_cAccessor_selectTypeInfoOfReturn( p_that ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_selectTypeInfoOfReturn( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0] )
#define tTaskMain_cAccessor_getSelectedParamInfo( p_that, name, max_len, dir ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_getSelectedParamInfo( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (name), (max_len), (dir) )
#define tTaskMain_cAccessor_selectParamInfo( p_that, ith ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_selectParamInfo( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (ith) )
#define tTaskMain_cAccessor_selectTypeInfoOfParam( p_that ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_selectTypeInfoOfParam( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0] )
#define tTaskMain_cAccessor_getSelectedTypeInfo( p_that, name, max_len, kind ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_getSelectedTypeInfo( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (name), (max_len), (kind) )
#define tTaskMain_cAccessor_selectTypeInfoOfType( p_that ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_selectTypeInfoOfType( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0] )
#define tTaskMain_cAccessor_getSelectedRegionInfo( p_that, name, max_len, num_cell, num_region ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_getSelectedRegionInfo( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (name), (max_len), (num_cell), (num_region) )
#define tTaskMain_cAccessor_selectCellInfo( p_that, ith ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_selectCellInfo( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (ith) )
#define tTaskMain_cAccessor_selectRegionInfo( p_that, ith ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_selectRegionInfo( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (ith) )
#define tTaskMain_cAccessor_getSelectedCellInfo( p_that, name, max_len ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_getSelectedCellInfo( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (name), (max_len) )
#define tTaskMain_cAccessor_selectCelltypeInfoOfCell( p_that ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_selectCelltypeInfoOfCell( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0] )
#define tTaskMain_cAccessor_getAttrValueInStr( p_that, buf, max_len ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_getAttrValueInStr( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (buf), (max_len) )
#define tTaskMain_cAccessor_getAttrSizeIsValue( p_that ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_getAttrSizeIsValue( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0] )
#define tTaskMain_cAccessor_getVarValueInStr( p_that, buf, max_len ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_getVarValueInStr( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0], (buf), (max_len) )
#define tTaskMain_cAccessor_getVarSizeIsValue( p_that ) \
	  nTECSInfo_tTECSInfoAccessor_eSelector_getVarSizeIsValue( \
	   &nTECSInfo_tTECSInfoAccessor_CB_tab[0] )

#else  /* TECSFLOW */
#define tTaskMain_cAccessor_selectNamespaceInfoByName( p_that, namespacePath ) \
	  (p_that)->cAccessor.selectNamespaceInfoByName__T( \
 (namespacePath) )
#define tTaskMain_cAccessor_selectCelltypeInfoByName( p_that, celltypePath ) \
	  (p_that)->cAccessor.selectCelltypeInfoByName__T( \
 (celltypePath) )
#define tTaskMain_cAccessor_selectSignatureInfoByName( p_that, signaturePath ) \
	  (p_that)->cAccessor.selectSignatureInfoByName__T( \
 (signaturePath) )
#define tTaskMain_cAccessor_selectRegionInfoByName( p_that, regionPath ) \
	  (p_that)->cAccessor.selectRegionInfoByName__T( \
 (regionPath) )
#define tTaskMain_cAccessor_selectCellInfoByName( p_that, cellPath ) \
	  (p_that)->cAccessor.selectCellInfoByName__T( \
 (cellPath) )
#define tTaskMain_cAccessor_getSignatureNameOfCellEntry( p_that, cellEntryPath, signatureGlobalName, max_len ) \
	  (p_that)->cAccessor.getSignatureNameOfCellEntry__T( \
 (cellEntryPath), (signatureGlobalName), (max_len) )
#define tTaskMain_cAccessor_getSelectedNamespaceInfo( p_that, name, max_len, num_namespace, num_celltype, num_signature ) \
	  (p_that)->cAccessor.getSelectedNamespaceInfo__T( \
 (name), (max_len), (num_namespace), (num_celltype), (num_signature) )
#define tTaskMain_cAccessor_selectCelltypeInfo( p_that, ith ) \
	  (p_that)->cAccessor.selectCelltypeInfo__T( \
 (ith) )
#define tTaskMain_cAccessor_selectSignatureInfo( p_that, ith ) \
	  (p_that)->cAccessor.selectSignatureInfo__T( \
 (ith) )
#define tTaskMain_cAccessor_selectNamespaceInfo( p_that, ith ) \
	  (p_that)->cAccessor.selectNamespaceInfo__T( \
 (ith) )
#define tTaskMain_cAccessor_getSelectedCelltypeInfo( p_that, name, max_len, num_attr, num_var, num_call, num_entry ) \
	  (p_that)->cAccessor.getSelectedCelltypeInfo__T( \
 (name), (max_len), (num_attr), (num_var), (num_call), (num_entry) )
#define tTaskMain_cAccessor_selectCallInfo( p_that, ith ) \
	  (p_that)->cAccessor.selectCallInfo__T( \
 (ith) )
#define tTaskMain_cAccessor_selectEntryInfo( p_that, ith ) \
	  (p_that)->cAccessor.selectEntryInfo__T( \
 (ith) )
#define tTaskMain_cAccessor_selectAttrInfo( p_that, ith ) \
	  (p_that)->cAccessor.selectAttrInfo__T( \
 (ith) )
#define tTaskMain_cAccessor_selectVarInfo( p_that, ith ) \
	  (p_that)->cAccessor.selectVarInfo__T( \
 (ith) )
#define tTaskMain_cAccessor_getSelectedAttrInfo( p_that, name, max_len ) \
	  (p_that)->cAccessor.getSelectedAttrInfo__T( \
 (name), (max_len) )
#define tTaskMain_cAccessor_getSizeIsExprOfAttr( p_that, expr_str, max_len ) \
	  (p_that)->cAccessor.getSizeIsExprOfAttr__T( \
 (expr_str), (max_len) )
#define tTaskMain_cAccessor_selectTypeInfoOfAttr( p_that ) \
	  (p_that)->cAccessor.selectTypeInfoOfAttr__T( \
 )
#define tTaskMain_cAccessor_getSelectedVarInfo( p_that, name, max_len ) \
	  (p_that)->cAccessor.getSelectedVarInfo__T( \
 (name), (max_len) )
#define tTaskMain_cAccessor_getSizeIsExprOfVar( p_that, expr_str, max_len ) \
	  (p_that)->cAccessor.getSizeIsExprOfVar__T( \
 (expr_str), (max_len) )
#define tTaskMain_cAccessor_selectTypeInfoOfVar( p_that ) \
	  (p_that)->cAccessor.selectTypeInfoOfVar__T( \
 )
#define tTaskMain_cAccessor_getSelectedCallInfo( p_that, name, max_len, array_size ) \
	  (p_that)->cAccessor.getSelectedCallInfo__T( \
 (name), (max_len), (array_size) )
#define tTaskMain_cAccessor_selectSignatureOfCall( p_that ) \
	  (p_that)->cAccessor.selectSignatureOfCall__T( \
 )
#define tTaskMain_cAccessor_getSelectedCallSpecifierInfo( p_that, b_optional, b_dynamic, b_ref_desc, b_omit ) \
	  (p_that)->cAccessor.getSelectedCallSpecifierInfo__T( \
 (b_optional), (b_dynamic), (b_ref_desc), (b_omit) )
#define tTaskMain_cAccessor_getSelectedCallInternalInfo( p_that, b_allocator_port, b_require_port ) \
	  (p_that)->cAccessor.getSelectedCallInternalInfo__T( \
 (b_allocator_port), (b_require_port) )
#define tTaskMain_cAccessor_getSelectedCallLocationInfo( p_that, offset, place ) \
	  (p_that)->cAccessor.getSelectedCallLocationInfo__T( \
 (offset), (place) )
#define tTaskMain_cAccessor_getSelectedCallOptimizeInfo( p_that, b_VMT_useless, b_skelton_useless, b_cell_unique ) \
	  (p_that)->cAccessor.getSelectedCallOptimizeInfo__T( \
 (b_VMT_useless), (b_skelton_useless), (b_cell_unique) )
#define tTaskMain_cAccessor_getSelectedEntryInfo( p_that, name, max_len, array_size ) \
	  (p_that)->cAccessor.getSelectedEntryInfo__T( \
 (name), (max_len), (array_size) )
#define tTaskMain_cAccessor_selectSignatureOfEntry( p_that ) \
	  (p_that)->cAccessor.selectSignatureOfEntry__T( \
 )
#define tTaskMain_cAccessor_getSelectedEntryInlineInfo( p_that, b_inline ) \
	  (p_that)->cAccessor.getSelectedEntryInlineInfo__T( \
 (b_inline) )
#define tTaskMain_cAccessor_getSelectedSignatureInfo( p_that, name, max_len, num_function ) \
	  (p_that)->cAccessor.getSelectedSignatureInfo__T( \
 (name), (max_len), (num_function) )
#define tTaskMain_cAccessor_selectFunctionInfoByIndex( p_that, ith ) \
	  (p_that)->cAccessor.selectFunctionInfoByIndex__T( \
 (ith) )
#define tTaskMain_cAccessor_getSelectedFunctionInfo( p_that, name, max_len, num_args ) \
	  (p_that)->cAccessor.getSelectedFunctionInfo__T( \
 (name), (max_len), (num_args) )
#define tTaskMain_cAccessor_selectTypeInfoOfReturn( p_that ) \
	  (p_that)->cAccessor.selectTypeInfoOfReturn__T( \
 )
#define tTaskMain_cAccessor_getSelectedParamInfo( p_that, name, max_len, dir ) \
	  (p_that)->cAccessor.getSelectedParamInfo__T( \
 (name), (max_len), (dir) )
#define tTaskMain_cAccessor_selectParamInfo( p_that, ith ) \
	  (p_that)->cAccessor.selectParamInfo__T( \
 (ith) )
#define tTaskMain_cAccessor_selectTypeInfoOfParam( p_that ) \
	  (p_that)->cAccessor.selectTypeInfoOfParam__T( \
 )
#define tTaskMain_cAccessor_getSelectedTypeInfo( p_that, name, max_len, kind ) \
	  (p_that)->cAccessor.getSelectedTypeInfo__T( \
 (name), (max_len), (kind) )
#define tTaskMain_cAccessor_selectTypeInfoOfType( p_that ) \
	  (p_that)->cAccessor.selectTypeInfoOfType__T( \
 )
#define tTaskMain_cAccessor_getSelectedRegionInfo( p_that, name, max_len, num_cell, num_region ) \
	  (p_that)->cAccessor.getSelectedRegionInfo__T( \
 (name), (max_len), (num_cell), (num_region) )
#define tTaskMain_cAccessor_selectCellInfo( p_that, ith ) \
	  (p_that)->cAccessor.selectCellInfo__T( \
 (ith) )
#define tTaskMain_cAccessor_selectRegionInfo( p_that, ith ) \
	  (p_that)->cAccessor.selectRegionInfo__T( \
 (ith) )
#define tTaskMain_cAccessor_getSelectedCellInfo( p_that, name, max_len ) \
	  (p_that)->cAccessor.getSelectedCellInfo__T( \
 (name), (max_len) )
#define tTaskMain_cAccessor_selectCelltypeInfoOfCell( p_that ) \
	  (p_that)->cAccessor.selectCelltypeInfoOfCell__T( \
 )
#define tTaskMain_cAccessor_getAttrValueInStr( p_that, buf, max_len ) \
	  (p_that)->cAccessor.getAttrValueInStr__T( \
 (buf), (max_len) )
#define tTaskMain_cAccessor_getAttrSizeIsValue( p_that ) \
	  (p_that)->cAccessor.getAttrSizeIsValue__T( \
 )
#define tTaskMain_cAccessor_getVarValueInStr( p_that, buf, max_len ) \
	  (p_that)->cAccessor.getVarValueInStr__T( \
 (buf), (max_len) )
#define tTaskMain_cAccessor_getVarSizeIsValue( p_that ) \
	  (p_that)->cAccessor.getVarSizeIsValue__T( \
 )

#endif /* TECSFLOW */
#endif /* TOPPERS_CB_TYPE_ONLY */

#ifndef TOPPERS_MACRO_ONLY

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/* prototype declaration of entry port function (referenced when VMT useless optimise enabled) #_EPSP_# */
/* eBody */
void           tTaskMain_eBody_main_skel( const struct tag_sTaskBody_VDES *epd);

#ifndef TOPPERS_CB_TYPE_ONLY

#endif /* TOPPERS_CB_TYPE_ONLY */

#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* TOPPERS_MACRO_ONLY */

#ifndef TOPPERS_CB_TYPE_ONLY

/* IDX validation macro (abbrev.) #_CVIA_# */
#define VALID_IDX(IDX)  tTaskMain_VALID_IDX(IDX)


/* cell CB macro (abbrev) #_GCBA_# */
#define GET_CELLCB(idx)  tTaskMain_GET_CELLCB(idx)

/* CELLCB type (abbrev) #_CCT_# */
#define CELLCB	tTaskMain_CB

/* celltype IDX type (abbrev) #_CTIXA_# */
#define CELLIDX	tTaskMain_IDX


/* attr access macro (abbrev) #_AAMA_# */
#define ATTR_NAME_LEN        tTaskMain_ATTR_NAME_LEN( p_cellcb )


/* var access macro (abbrev) #_VAMA_# */
#define VAR_name             tTaskMain_VAR_name( p_cellcb )
#define VAR_name2            tTaskMain_VAR_name2( p_cellcb )

/* call port function macro (abbrev) #_CPMA_# */
#define cAccessor_selectNamespaceInfoByName( namespacePath ) \
          ((void)p_cellcb, tTaskMain_cAccessor_selectNamespaceInfoByName( p_cellcb, namespacePath ))
#define cAccessor_selectCelltypeInfoByName( celltypePath ) \
          ((void)p_cellcb, tTaskMain_cAccessor_selectCelltypeInfoByName( p_cellcb, celltypePath ))
#define cAccessor_selectSignatureInfoByName( signaturePath ) \
          ((void)p_cellcb, tTaskMain_cAccessor_selectSignatureInfoByName( p_cellcb, signaturePath ))
#define cAccessor_selectRegionInfoByName( regionPath ) \
          ((void)p_cellcb, tTaskMain_cAccessor_selectRegionInfoByName( p_cellcb, regionPath ))
#define cAccessor_selectCellInfoByName( cellPath ) \
          ((void)p_cellcb, tTaskMain_cAccessor_selectCellInfoByName( p_cellcb, cellPath ))
#define cAccessor_getSignatureNameOfCellEntry( cellEntryPath, signatureGlobalName, max_len ) \
          ((void)p_cellcb, tTaskMain_cAccessor_getSignatureNameOfCellEntry( p_cellcb, cellEntryPath, signatureGlobalName, max_len ))
#define cAccessor_getSelectedNamespaceInfo( name, max_len, num_namespace, num_celltype, num_signature ) \
          ((void)p_cellcb, tTaskMain_cAccessor_getSelectedNamespaceInfo( p_cellcb, name, max_len, num_namespace, num_celltype, num_signature ))
#define cAccessor_selectCelltypeInfo( ith ) \
          ((void)p_cellcb, tTaskMain_cAccessor_selectCelltypeInfo( p_cellcb, ith ))
#define cAccessor_selectSignatureInfo( ith ) \
          ((void)p_cellcb, tTaskMain_cAccessor_selectSignatureInfo( p_cellcb, ith ))
#define cAccessor_selectNamespaceInfo( ith ) \
          ((void)p_cellcb, tTaskMain_cAccessor_selectNamespaceInfo( p_cellcb, ith ))
#define cAccessor_getSelectedCelltypeInfo( name, max_len, num_attr, num_var, num_call, num_entry ) \
          ((void)p_cellcb, tTaskMain_cAccessor_getSelectedCelltypeInfo( p_cellcb, name, max_len, num_attr, num_var, num_call, num_entry ))
#define cAccessor_selectCallInfo( ith ) \
          ((void)p_cellcb, tTaskMain_cAccessor_selectCallInfo( p_cellcb, ith ))
#define cAccessor_selectEntryInfo( ith ) \
          ((void)p_cellcb, tTaskMain_cAccessor_selectEntryInfo( p_cellcb, ith ))
#define cAccessor_selectAttrInfo( ith ) \
          ((void)p_cellcb, tTaskMain_cAccessor_selectAttrInfo( p_cellcb, ith ))
#define cAccessor_selectVarInfo( ith ) \
          ((void)p_cellcb, tTaskMain_cAccessor_selectVarInfo( p_cellcb, ith ))
#define cAccessor_getSelectedAttrInfo( name, max_len ) \
          ((void)p_cellcb, tTaskMain_cAccessor_getSelectedAttrInfo( p_cellcb, name, max_len ))
#define cAccessor_getSizeIsExprOfAttr( expr_str, max_len ) \
          ((void)p_cellcb, tTaskMain_cAccessor_getSizeIsExprOfAttr( p_cellcb, expr_str, max_len ))
#define cAccessor_selectTypeInfoOfAttr( ) \
          ((void)p_cellcb, tTaskMain_cAccessor_selectTypeInfoOfAttr( p_cellcb ))
#define cAccessor_getSelectedVarInfo( name, max_len ) \
          ((void)p_cellcb, tTaskMain_cAccessor_getSelectedVarInfo( p_cellcb, name, max_len ))
#define cAccessor_getSizeIsExprOfVar( expr_str, max_len ) \
          ((void)p_cellcb, tTaskMain_cAccessor_getSizeIsExprOfVar( p_cellcb, expr_str, max_len ))
#define cAccessor_selectTypeInfoOfVar( ) \
          ((void)p_cellcb, tTaskMain_cAccessor_selectTypeInfoOfVar( p_cellcb ))
#define cAccessor_getSelectedCallInfo( name, max_len, array_size ) \
          ((void)p_cellcb, tTaskMain_cAccessor_getSelectedCallInfo( p_cellcb, name, max_len, array_size ))
#define cAccessor_selectSignatureOfCall( ) \
          ((void)p_cellcb, tTaskMain_cAccessor_selectSignatureOfCall( p_cellcb ))
#define cAccessor_getSelectedCallSpecifierInfo( b_optional, b_dynamic, b_ref_desc, b_omit ) \
          ((void)p_cellcb, tTaskMain_cAccessor_getSelectedCallSpecifierInfo( p_cellcb, b_optional, b_dynamic, b_ref_desc, b_omit ))
#define cAccessor_getSelectedCallInternalInfo( b_allocator_port, b_require_port ) \
          ((void)p_cellcb, tTaskMain_cAccessor_getSelectedCallInternalInfo( p_cellcb, b_allocator_port, b_require_port ))
#define cAccessor_getSelectedCallLocationInfo( offset, place ) \
          ((void)p_cellcb, tTaskMain_cAccessor_getSelectedCallLocationInfo( p_cellcb, offset, place ))
#define cAccessor_getSelectedCallOptimizeInfo( b_VMT_useless, b_skelton_useless, b_cell_unique ) \
          ((void)p_cellcb, tTaskMain_cAccessor_getSelectedCallOptimizeInfo( p_cellcb, b_VMT_useless, b_skelton_useless, b_cell_unique ))
#define cAccessor_getSelectedEntryInfo( name, max_len, array_size ) \
          ((void)p_cellcb, tTaskMain_cAccessor_getSelectedEntryInfo( p_cellcb, name, max_len, array_size ))
#define cAccessor_selectSignatureOfEntry( ) \
          ((void)p_cellcb, tTaskMain_cAccessor_selectSignatureOfEntry( p_cellcb ))
#define cAccessor_getSelectedEntryInlineInfo( b_inline ) \
          ((void)p_cellcb, tTaskMain_cAccessor_getSelectedEntryInlineInfo( p_cellcb, b_inline ))
#define cAccessor_getSelectedSignatureInfo( name, max_len, num_function ) \
          ((void)p_cellcb, tTaskMain_cAccessor_getSelectedSignatureInfo( p_cellcb, name, max_len, num_function ))
#define cAccessor_selectFunctionInfoByIndex( ith ) \
          ((void)p_cellcb, tTaskMain_cAccessor_selectFunctionInfoByIndex( p_cellcb, ith ))
#define cAccessor_getSelectedFunctionInfo( name, max_len, num_args ) \
          ((void)p_cellcb, tTaskMain_cAccessor_getSelectedFunctionInfo( p_cellcb, name, max_len, num_args ))
#define cAccessor_selectTypeInfoOfReturn( ) \
          ((void)p_cellcb, tTaskMain_cAccessor_selectTypeInfoOfReturn( p_cellcb ))
#define cAccessor_getSelectedParamInfo( name, max_len, dir ) \
          ((void)p_cellcb, tTaskMain_cAccessor_getSelectedParamInfo( p_cellcb, name, max_len, dir ))
#define cAccessor_selectParamInfo( ith ) \
          ((void)p_cellcb, tTaskMain_cAccessor_selectParamInfo( p_cellcb, ith ))
#define cAccessor_selectTypeInfoOfParam( ) \
          ((void)p_cellcb, tTaskMain_cAccessor_selectTypeInfoOfParam( p_cellcb ))
#define cAccessor_getSelectedTypeInfo( name, max_len, kind ) \
          ((void)p_cellcb, tTaskMain_cAccessor_getSelectedTypeInfo( p_cellcb, name, max_len, kind ))
#define cAccessor_selectTypeInfoOfType( ) \
          ((void)p_cellcb, tTaskMain_cAccessor_selectTypeInfoOfType( p_cellcb ))
#define cAccessor_getSelectedRegionInfo( name, max_len, num_cell, num_region ) \
          ((void)p_cellcb, tTaskMain_cAccessor_getSelectedRegionInfo( p_cellcb, name, max_len, num_cell, num_region ))
#define cAccessor_selectCellInfo( ith ) \
          ((void)p_cellcb, tTaskMain_cAccessor_selectCellInfo( p_cellcb, ith ))
#define cAccessor_selectRegionInfo( ith ) \
          ((void)p_cellcb, tTaskMain_cAccessor_selectRegionInfo( p_cellcb, ith ))
#define cAccessor_getSelectedCellInfo( name, max_len ) \
          ((void)p_cellcb, tTaskMain_cAccessor_getSelectedCellInfo( p_cellcb, name, max_len ))
#define cAccessor_selectCelltypeInfoOfCell( ) \
          ((void)p_cellcb, tTaskMain_cAccessor_selectCelltypeInfoOfCell( p_cellcb ))
#define cAccessor_getAttrValueInStr( buf, max_len ) \
          ((void)p_cellcb, tTaskMain_cAccessor_getAttrValueInStr( p_cellcb, buf, max_len ))
#define cAccessor_getAttrSizeIsValue( ) \
          ((void)p_cellcb, tTaskMain_cAccessor_getAttrSizeIsValue( p_cellcb ))
#define cAccessor_getVarValueInStr( buf, max_len ) \
          ((void)p_cellcb, tTaskMain_cAccessor_getVarValueInStr( p_cellcb, buf, max_len ))
#define cAccessor_getVarSizeIsValue( ) \
          ((void)p_cellcb, tTaskMain_cAccessor_getVarSizeIsValue( p_cellcb ))




/* entry port function macro (abbrev) #_EPM_# */
#define eBody_main       tTaskMain_eBody_main

/* iteration code (FOREACH_CELL) #_FEC_# */
#define FOREACH_CELL(i,p_cb)   \
    for( (i) = 0; (i) < tTaskMain_N_CELL; (i)++ ){ \
       (p_cb) = &tTaskMain_CB_tab[i];

#define END_FOREACH_CELL   }

/* CB initialize macro #_CIM_# */
#define INITIALIZE_CB(p_that)	(void)(p_that);
#define SET_CB_INIB_POINTER(i,p_that)\
	/* empty */
#endif /* TOPPERS_CB_TYPE_ONLY */

#ifndef TOPPERS_MACRO_ONLY

#endif /* TOPPERS_MACRO_ONLY */

#endif /* tTaskMain_TECSGENH */
