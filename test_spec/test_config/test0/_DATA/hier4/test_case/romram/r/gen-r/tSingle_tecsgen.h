/*
 * This file was automatically generated by tecsgen.
 * This file is not intended to be edited.
 */
#ifndef tSingle_TECSGEN_H
#define tSingle_TECSGEN_H

/*
 * celltype          :  tSingle
 * global name       :  tSingle
 * multi-domain      :  no
 * idx_is_id(actual) :  yes(no)
 * singleton         :  yes
 * has_CB            :  yes
 * has_INIB          :  no
 * rom               :  no
 * CB initializer    :  yes
 */

/* global header #_IGH_# */
#include "global_tecsgen.h"

/* signature header #_ISH_# */
#include "sSig_tecsgen.h"

#ifndef TOPPERS_MACRO_ONLY

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */
/* cell CB type definition #_CCTPO_# */
typedef struct tag_tSingle_CB {
    /* call port #_TCP_# */
    struct tag_sSig_VDES *const*cCall; /* TCP_2 */
    int_t n_cCall;  /* TCP_3 */
    /* call port #_NEP_# */ 
    /* attribute #_AT_# */ 
    int32_t        a;
    /* var #_VA_# */ 
    int32_t        b;
}  tSingle_CB;
/* singleton cell CB prototype declaration #_SCP_# */
extern  tSingle_CB  tSingle_SINGLE_CELL_CB;


/* celltype IDX type #_CTIX_# */
typedef struct tag_tSingle_CB *tSingle_IDX;

/* prototype declaration of entry port function #_EPP_# */
/* sSig */
int32_t      tSingle_eSig_func( int32_t in, int32_t* out);
#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* TOPPERS_MACRO_ONLY */

#ifndef TOPPERS_CB_TYPE_ONLY

/* call port array size macro #_NCPA_# */
#define N_CP_cCall  (tSingle_SINGLE_CELL_CB.n_cCall)
#define NCP_cCall   (tSingle_SINGLE_CELL_CB.n_cCall)

/* celll CB macro #_GCB_# */
#define tSingle_GET_CELLCB(idx) ((void *)0)

/* attr access  #_AAM_# */
#define tSingle_ATTR_a      	(tSingle_SINGLE_CELL_CB.a)

#define tSingle_GET_a()     	(tSingle_SINGLE_CELL_CB.a)


/* var access macro #_VAM_# */
#define tSingle_VAR_b       	(tSingle_SINGLE_CELL_CB.b)

#define tSingle_GET_b()     	(tSingle_SINGLE_CELL_CB.b)
#define tSingle_SET_b(val)  	(tSingle_SINGLE_CELL_CB.b=(val))

#ifndef TECSFLOW
 /* call port function macro #_CPM_# */
#define tSingle_cCall_func( subscript, in, out ) \
	  tSingle_SINGLE_CELL_CB.cCall[subscript]->VMT->func__T( \
	  tSingle_SINGLE_CELL_CB.cCall[subscript], (in), (out) )

#else  /* TECSFLOW */
#define tSingle_cCall_func( subscript, in, out ) \
	  (p_that)->cCall[subscript].func__T( \
 (in), (out) )

#endif /* TECSFLOW */
#endif /* TOPPERS_CB_TYPE_ONLY */

#ifndef TOPPERS_MACRO_ONLY

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/* prototype declaration of entry port function (referenced when VMT useless optimise enabled) #_EPSP_# */
/* eSig */
int32_t        tSingle_eSig_func_skel( const struct tag_sSig_VDES *epd, int32_t in, int32_t* out);

#ifndef TOPPERS_CB_TYPE_ONLY

#endif /* TOPPERS_CB_TYPE_ONLY */

#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* TOPPERS_MACRO_ONLY */

#ifndef TOPPERS_CB_TYPE_ONLY


/* cell CB macro (abbrev) #_GCBA_# */
#define GET_CELLCB(idx)  tSingle_GET_CELLCB(idx)

/* CELLCB type (abbrev) #_CCT_# */
#define CELLCB	tSingle_CB

/* celltype IDX type (abbrev) #_CTIXA_# */
#define CELLIDX	tSingle_IDX


/* attr access macro (abbrev) #_AAMA_# */
#define ATTR_a               tSingle_ATTR_a


/* var access macro (abbrev) #_VAMA_# */
#define VAR_b                tSingle_VAR_b

/* call port function macro (abbrev) #_CPMA_# */
#define cCall_func( subscript, in, out ) \
          tSingle_cCall_func( subscript, in, out )




/* entry port function macro (abbrev) #_EPM_# */
#define eSig_func        tSingle_eSig_func

/* CB initialize macro #_CIM_# */
#define INITIALIZE_CB()\
	tSingle_SINGLE_CELL_CB.b = 44;
#define SET_CB_INIB_POINTER(i,p_that)\
	/* empty */
#endif /* TOPPERS_CB_TYPE_ONLY */

#ifndef TOPPERS_MACRO_ONLY

#endif /* TOPPERS_MACRO_ONLY */

#endif /* tSingle_TECSGENH */
