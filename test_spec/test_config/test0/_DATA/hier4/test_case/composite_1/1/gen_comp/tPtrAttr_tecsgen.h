/*
 * This file was automatically generated by tecsgen.
 * This file is not intended to be edited.
 */
#ifndef tPtrAttr_TECSGEN_H
#define tPtrAttr_TECSGEN_H

/*
 * celltype          :  tPtrAttr
 * global name       :  tPtrAttr
 * multi-domain      :  no
 * idx_is_id(actual) :  no(no)
 * singleton         :  no
 * has_CB            :  no
 * has_INIB          :  yes
 * rom               :  yes
 * CB initializer    :  no
 */

/* global header #_IGH_# */
#include "global_tecsgen.h"

/* signature header #_ISH_# */

#ifndef TOPPERS_MACRO_ONLY

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */
/* cell INIB type definition #_CIP_# */
typedef const struct tag_tPtrAttr_INIB {
    /* attribute(RO) #_ATO_# */ 
    int8_t*        p_attr0;
    int8_t*        p_attr1;
    int8_t*        p_attr2;
    int8_t*        p_attr3;
}  tPtrAttr_INIB;

/* CB not exist. CB corresponding to INIB #_DCI_# */
#define tPtrAttr_CB_tab           tPtrAttr_INIB_tab
#define tPtrAttr_CB               tPtrAttr_INIB
#define tag_tPtrAttr_CB           tag_tPtrAttr_INIB

/* singleton cell CB prototype declaration #_MCPB_# */
extern tPtrAttr_INIB  tPtrAttr_INIB_tab[];

/* celltype IDX type #_CTIX_# */
typedef const struct tag_tPtrAttr_INIB *tPtrAttr_IDX;
#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* TOPPERS_MACRO_ONLY */

#ifndef TOPPERS_CB_TYPE_ONLY

#define tPtrAttr_ID_BASE            (1)  /* ID Base  #_NIDB_# */
#define tPtrAttr_N_CELL             (2)  /*  number of cells  #_NCEL_# */

/* IDX validation macro #_CVI_# */
#define tPtrAttr_VALID_IDX(IDX) (1)


/* celll CB macro #_GCB_# */
#define tPtrAttr_GET_CELLCB(idx) (idx)

/* attr access  #_AAM_# */
#define tPtrAttr_ATTR_p_attr0( p_that )	((p_that)->p_attr0)
#define tPtrAttr_ATTR_p_attr1( p_that )	((p_that)->p_attr1)
#define tPtrAttr_ATTR_p_attr2( p_that )	((p_that)->p_attr2)
#define tPtrAttr_ATTR_p_attr3( p_that )	((p_that)->p_attr3)

#define tPtrAttr_GET_p_attr0(p_that)	((p_that)->p_attr0)
#define tPtrAttr_GET_p_attr1(p_that)	((p_that)->p_attr1)
#define tPtrAttr_GET_p_attr2(p_that)	((p_that)->p_attr2)
#define tPtrAttr_GET_p_attr3(p_that)	((p_that)->p_attr3)



#ifndef TECSFLOW
#else  /* TECSFLOW */
#endif /* TECSFLOW */
#endif /* TOPPERS_CB_TYPE_ONLY */

#ifndef TOPPERS_MACRO_ONLY

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#ifndef TOPPERS_CB_TYPE_ONLY

#endif /* TOPPERS_CB_TYPE_ONLY */

#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* TOPPERS_MACRO_ONLY */

#ifndef TOPPERS_CB_TYPE_ONLY

/* IDX validation macro (abbrev.) #_CVIA_# */
#define VALID_IDX(IDX)  tPtrAttr_VALID_IDX(IDX)


/* cell CB macro (abbrev) #_GCBA_# */
#define GET_CELLCB(idx)  tPtrAttr_GET_CELLCB(idx)

/* CELLCB type (abbrev) #_CCT_# */
#define CELLCB	tPtrAttr_CB

/* celltype IDX type (abbrev) #_CTIXA_# */
#define CELLIDX	tPtrAttr_IDX


/* attr access macro (abbrev) #_AAMA_# */
#define ATTR_p_attr0         tPtrAttr_ATTR_p_attr0( p_cellcb )
#define ATTR_p_attr1         tPtrAttr_ATTR_p_attr1( p_cellcb )
#define ATTR_p_attr2         tPtrAttr_ATTR_p_attr2( p_cellcb )
#define ATTR_p_attr3         tPtrAttr_ATTR_p_attr3( p_cellcb )




/* iteration code (FOREACH_CELL) #_FEC_# */
#define FOREACH_CELL(i,p_cb)   \
    for( (i) = 0; (i) < tPtrAttr_N_CELL; (i)++ ){ \
       //(p_cb) = &tPtrAttr_CB_tab[i];

#define END_FOREACH_CELL   }

/* CB initialize macro #_CIM_# */
#endif /* TOPPERS_CB_TYPE_ONLY */

#ifndef TOPPERS_MACRO_ONLY

#endif /* TOPPERS_MACRO_ONLY */

#endif /* tPtrAttr_TECSGENH */
